 

Hamming’s (8,4) code can be used to correct single-bit errors that might occur within an 8-bit byte.  For instance, given the following 12 bits: 100010010000, we can number the bits as: 

  1 0 0 0 1 0 0 1 0 0 0 0

    1  2   3  4  5   6  7  8  9  10  11 12

and then apply Hamming’s algorithm to discover that the 12th bit is in error (it should be a 1).  After making the correction, we could extract the data bits to get the 8-bits: 01000001, which is the ASCII code for the letter ‘A’.

 

Recall that the data digits correspond to those numbered 3, 5, 6, 7, 9, 10, 11, & 12, since the check digits are those that correspond to the powers of two (printed in bold above).

 

Note: An ASCII table has been included at the end of this document.

 

Assuming that all errors are restricted to at most 1-bit per character, correct any such errors, and decode the following ASCII message (uses Hamming’s (8,4) code):

 "					F			i				x			i
 
00100010		01000110	01101001		01111000		01101001
____________  ____________  ____________  ____________  ____________

100100010010  000110000110  011111001001  100111111000  010111001000

 

 
	n				g							e			r
   
01101110		01100111	  00100000		01100101      01110010
____________  ____________  ____________  ____________  ____________

010011011110  010111010111  000101000000  100111000101  110111110011 

 

 
	r				o			r				s
 
01110010		01101111	  01110010		01110011		100000
____________  ____________  ____________  ____________  ____________

110111110010  110111001111  110111100010  110011100011  010101000000 

 

 
	i				s							f			  u
 
01101001		01110011	  00100000     01100110		   01110101
____________  ____________  ____________  ____________  ____________

010111001001  110011100111  010101000000  010011000110  010011100101 

 

 
   n				!			"				,			
 
01101110		00100001	  100010		00101100	  0100000
____________  ____________  ____________  ____________  ____________

110011011110  010001010001  100101010010  100101101100  010101000000 

 

 
D					r			.							B
 
01000100		01110010	 00101110		100000			1000010
____________  ____________  ____________  ____________  ____________

110110010100  110101110010  010101011110  010101000100  010110010010

 

 
a					b			e				r			.
 
1100001			1100010		  1100101		01110010		00101110
____________  ____________  ____________  ____________  ____________

110111010001  000011010010  100111000101  110111110011  010101011110

 

 
Answer: "Fixing errors is fun!", Dr. Baber.
 

 

 

 

 

 


 

                    A S C I I   C h a r t
 

 

 

Decimal  ASCII       Decimal  ASCII      Decimal  ASCII      Decimal  ASCII

 Value   Char         Value   Char        Value   Char        Value   Char

 

   0     NUL            32     SP           64     @            96     `

   1     SOH            33     !            65     A            97     a

   2     STX            34     "            66     B            98     b

   3     ETX            35     #            67     C            99     c

   4     EOT            36     $            68     D           100     d

   5     ENQ            37     %            69     E           101     e

   6     ACK            38     &            70     F           102     f

   7     BEL            39     '            71     G           103     g

   8     BS             40     (            72     H           104     h

   9     HT             41     )            73     I           105     i

  10     LF             42     *            74     J           106     j

  11     VT             43     +            75     K           107     k

  12     FF             44     ,            76     L           108     l

  13     CR             45     -            77     M           109     m

  14     SO             46     .            78     N           110     n

  15     SI             47     /            79     O           111     o

  16     DLE            48     0            80     P           112     p

  17     DC1            49     1            81     Q           113     q

  18     DC2            50     2            82     R           114     r

  19     DC3            51     3            83     S           115     s

  20     DC4            52     4            84     T           116     t

  21     NAK            53     5            85     U           117     u

  22     SYN            54     6            86     V           118     v

  23     ETB            55     7            87     W           119     w

  24     CAN            56     8            88     X           120     x

  25     EM             57     9            89     Y           121     y

  26     SUB            58     :            90     Z           122     z

  27     ESC            59     ;            91     [           123     {

  28     FS             60     <            92     \           124     |

  29     GS             61     =            93     ]           125     }

  30     RS             62     >            94     ^           126     ~

  31     US             63     ?            95     _           127     DEL

 